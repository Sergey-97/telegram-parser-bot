# bot_simple.py
import asyncio
import logging
from telethon import TelegramClient
import os
from dotenv import load_dotenv

load_dotenv()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def main():
    """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        API_ID = int(os.getenv('API_ID'))
        API_HASH = os.getenv('API_HASH')
        BOT_TOKEN = os.getenv('BOT_TOKEN')
        TARGET_CHANNEL = os.getenv('TARGET_CHANNEL', '@mar_factor')
        
        print("üîß –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        print(f"   API_ID: {API_ID}")
        print(f"   BOT_TOKEN: {BOT_TOKEN[:15]}...")
        print(f"   TARGET_CHANNEL: {TARGET_CHANNEL}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
        client = TelegramClient('bot_session', API_ID, API_HASH)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await client.start(bot_token=BOT_TOKEN)
        
        me = await client.get_me()
        print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {me.first_name} (@{me.username})")
        
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            channel = await client.get_entity(TARGET_CHANNEL)
            await client.send_message(
                channel, 
                "ü§ñ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n"
                "AI-–ø–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ."
            )
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {TARGET_CHANNEL}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        
        print("üéØ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û–∂–∏–¥–∞–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        await asyncio.Future()
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
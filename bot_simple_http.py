# bot_simple_http.py
import requests
import os
import time
from dotenv import load_dotenv
from ai_processor_final import AIProcessorFinal
from post_formatter import PostFormatter

load_dotenv()

class SimpleBot:
    def __init__(self):
        self.token = os.getenv('BOT_TOKEN')
        self.target_channel = os.getenv('TARGET_CHANNEL', '@mar_factor')
        self.ai_processor = AIProcessorFinal()
        self.post_formatter = PostFormatter()
    
    def check_channel_access(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É"""
        url = f"https://api.telegram.org/bot{self.token}/getChat"
        payload = {
            'chat_id': self.target_channel
        }
        
        try:
            response = requests.post(url, json=payload, timeout=10)
            if response.status_code == 200:
                chat_info = response.json()
                print(f"‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {chat_info['result']['title']}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É: {response.status_code}")
                print("üí° –†–µ—à–µ–Ω–∏—è:")
                print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å @username –∫–∞–Ω–∞–ª–∞")
                print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ID –∫–∞–Ω–∞–ª–∞ –≤–º–µ—Å—Ç–æ @username")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–∞: {e}")
            return False
    
    def send_message(self, text: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ HTTP API"""
        url = f"https://api.telegram.org/bot{self.token}/sendMessage"
        payload = {
            'chat_id': self.target_channel,
            'text': text,
        }
        
        try:
            response = requests.post(url, json=payload, timeout=10)
            if response.status_code == 200:
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    def run_manual_parse(self):
        """–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        print("üß† –ó–∞–ø—É—Å–∫ AI-–ø–∞—Ä—Å–∏–Ω–≥–∞...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É...")
        if not self.check_channel_access():
            print("‚ùå –ù–µ –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É")
            return
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        main_posts = [
            "Ozon –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤. –¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ —Å–º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∑–∞ –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã.",
            "–°–∫–∏–¥–∫–∏ –¥–æ 50% –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ! –£—Å–ø–µ–π—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã, –Ω–æ—É—Ç–±—É–∫–∏ –∏ –ø–ª–∞–Ω—à–µ—Ç—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º. –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞."
        ]
        
        discussion_posts = [
            "–û—Ç–ª–∏—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ Ozon! –Ø –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –Ω–æ–≤—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏.",
            "–°–∫–∏–¥–∫–∏ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä! –£–∂–µ –ø—Ä–∏—Å–º–æ—Ç—Ä–µ–ª —Å–µ–±–µ –Ω–æ–≤—ã–π –Ω–æ—É—Ç–±—É–∫ –ø–æ –æ—Ç–ª–∏—á–Ω–æ–π —Ü–µ–Ω–µ."
        ]
        
        # AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞
        structured_content = self.ai_processor.structure_content(main_posts, discussion_posts)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
        final_post = self.post_formatter.format_structured_post(
            structured_content, 
            ['@ozon_adv', '@sklad1313']
        )
        
        print("üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç:")
        print("=" * 50)
        print(final_post)
        print("=" * 50)
        
        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è
        if input("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–æ—Å—Ç? (y/n): ").lower() == 'y':
            success = self.send_message(final_post)
            if success:
                print("üéâ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç")
        else:
            print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")

if __name__ == "__main__":
    bot = SimpleBot()
    bot.run_manual_parse()
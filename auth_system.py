import os
import asyncio
import logging
from pyrogram import Client
from config import API_ID, API_HASH, BOT_TOKEN

logger = logging.getLogger(__name__)

class AuthSystem:
    def __init__(self):
        self.user_client = None
        self.bot_client = None
    
    async def get_user_client(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞"""
        if self.user_client is None:
            self.user_client = Client(
                "telegram_parser",
                api_id=API_ID,
                api_hash=API_HASH,
                workdir="/opt/render/project/src"
            )
            await self.user_client.start()
            
            me = await self.user_client.get_me()
            logger.info(f"üîê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {me.first_name} (@{me.username}) - –ë–æ—Ç: {me.is_bot}")
            
        return self.user_client
    
    async def get_bot_client(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        if self.bot_client is None and BOT_TOKEN:
            self.bot_client = Client(
                "telegram_bot",
                api_id=API_ID,
                api_hash=API_HASH,
                bot_token=BOT_TOKEN,
                workdir="/opt/render/project/src"
            )
            await self.bot_client.start()
            
            me = await self.bot_client.get_me()
            logger.info(f"ü§ñ –ë–û–¢: {me.first_name} (@{me.username}) - –ë–æ—Ç: {me.is_bot}")
            
        return self.bot_client
    
    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
        if self.user_client:
            await self.user_client.stop()
        if self.bot_client:
            await self.bot_client.stop()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
auth_system = AuthSystem()
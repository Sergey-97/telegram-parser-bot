# check_bot_token.py
import asyncio
from telethon import TelegramClient
import os
from dotenv import load_dotenv

load_dotenv()

async def check_bot_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞"""
    token = os.getenv('BOT_TOKEN')
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª .env")
        return False
    
    print(f"üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω: {token[:15]}...")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ API –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–∞–º –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω
        client = TelegramClient('check_session', 123, 'abc')
        await client.start(bot_token=token)
        
        me = await client.get_me()
        print(f"‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—á–∏–π! –ë–æ—Ç: {me.first_name} (@{me.username})")
        await client.disconnect()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞: {e}")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
        print("2. /mybots ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
        print("3. API Token ‚Üí Revoke current token ‚Üí Generate new token")
        print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∏ –æ–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª")
        return False

if __name__ == "__main__":
    asyncio.run(check_bot_token())
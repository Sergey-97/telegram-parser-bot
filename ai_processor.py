import logging

logger = logging.getLogger(__name__)

class AIProcessor:
    def __init__(self):
        pass
        
    def analyze_marketplace(self, text, channel_url=""):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å"""
        if not text:
            return 'OTHER'
            
        text_lower = text.lower()
        channel_lower = channel_url.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ URL –∫–∞–Ω–∞–ª–∞
        if 'ozon' in channel_lower:
            return 'OZON'
        elif 'wb' in channel_lower or 'wildberr' in channel_lower:
            return 'WB'
        elif 'yandex' in channel_lower or 'market' in channel_lower:
            return 'YANDEX'
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É
        if 'ozon' in text_lower or '–æ–∑–æ–Ω' in text_lower:
            return 'OZON'
        elif 'wb' in text_lower or '–≤–±' in text_lower or 'wildberr' in text_lower:
            return 'WB'
        elif 'yandex' in text_lower or '—è–Ω–¥–µ–∫—Å' in text_lower:
            return 'YANDEX'
        
        return 'OTHER'

    def structure_content(self, source_texts, discussion_texts):
        """–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ—Å—Ç–∞"""
        try:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã
            all_content = source_texts + discussion_texts
            
            if not all_content:
                return self._create_fallback_structure([])

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã
            marketplace_stats = {'OZON': 0, 'WB': 0, 'YANDEX': 0, 'OTHER': 0}
            
            for text in all_content:
                marketplace = self.analyze_marketplace(text)
                marketplace_stats[marketplace] += 1
            
            return {
                'title': 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
                'summary': f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(all_content)} —Å–æ–æ–±—â–µ–Ω–∏–π. OZON: {marketplace_stats["OZON"]}, WB: {marketplace_stats["WB"]}',
                'sections': {
                    'OZON': {
                        'key_points': ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è'],
                        'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏'],
                        'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏']
                    },
                    'WB': {
                        'key_points': ['–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤', '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–æ–≤'],
                        'important': ['–í–Ω–∏–º–∞–Ω–∏–µ –∫ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º'],
                        'tips': ['–ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É']
                    }
                },
                'recommendations': '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏'
            }
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return self._create_fallback_structure(source_texts + discussion_texts)

    def _create_fallback_structure(self, texts):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É"""
        return {
            'title': 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
            'summary': f'–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±–∑–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ {len(texts)} —Å–æ–æ–±—â–µ–Ω–∏–π' if texts else '–û–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π',
            'sections': {
                'OZON': {
                    'key_points': ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã'],
                    'important': ['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –õ–ö'],
                    'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫—É']
                },
                'WB': {
                    'key_points': ['–ü—Ä–æ—Ü–µ—Å—Å—ã –≤—ã–∫—É–ø–∞', '–†–∞–±–æ—Ç–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏'],
                    'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º–∏'],
                    'tips': ['–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É']
                }
            },
            'recommendations': '–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö'
        }
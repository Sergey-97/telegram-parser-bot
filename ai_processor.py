import os
import json
import requests
import re
from config import HUGGINGFACE_TOKEN

class AIProcessor:
    def __init__(self):
        self.api_key = HUGGINGFACE_TOKEN
        
    def analyze_marketplace(self, text, channel_url=""):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""
        if not text:
            return 'OTHER'
            
        text_lower = text.lower()
        channel_lower = channel_url.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ URL –∫–∞–Ω–∞–ª–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        if 'ozon' in channel_lower or 'prodaemozon' in channel_lower:
            return 'OZON'
        elif 'wb' in channel_lower or 'wildberr' in channel_lower or 'prodaemwb' in channel_lower:
            return 'WB'
        elif 'yandex' in channel_lower or 'market' in channel_lower:
            return 'YANDEX'
        elif 'ozon_adv' in channel_lower:
            return 'OZON'
            
        # –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        ozon_keywords = [
            'ozon', '–æ–∑–æ–Ω', 'o–∑–æ–Ω', 'o-zon', '–æ–∑–æ–Ω.', '–æ–∑–æ–Ω,', '–æ–∑–æ–Ω!',
            '–æ–∑–æ–Ω–∞', '–æ–∑–æ–Ω–µ', '–æ–∑–æ–Ω—É', '–æ–∑–æ–Ω–æ–º', '–æ–∑–æ–Ω—ã',
            'o–∑–æ–Ω.', 'o–∑–æ–Ω,', 'o–∑–æ–Ω!', 'o–∑–æ–Ω–∞', 'o–∑–æ–Ω–µ', 'o–∑–æ–Ω—É', 'o–∑–æ–Ω–æ–º'
        ]
        
        wb_keywords = [
            'wb', '–≤–±', 'wildberries', '–≤–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑', '–≤–∞–ª–¥–±–µ—Ä—Ä–∏–∑', 'wildberry',
            '–≤–±.', '–≤–±,', '–≤–±!', '–≤–±?', 'wb.', 'wb,', 'wb!', 'wb?',
            'wildberries.', 'wildberries,', 'wildberries!'
        ]
        
        yandex_keywords = [
            'yandex', '—è–Ω–¥–µ–∫—Å', 'yandex.', 'yandex,', 'yandex!',
            '—è–Ω–¥–µ–∫—Å.', '—è–Ω–¥–µ–∫—Å,', '—è–Ω–¥–µ–∫—Å!', '—è–Ω–¥–µ–∫—Å?',
            '—è–Ω–¥–µ–∫—Å.market', 'yandex market', '—è–Ω–¥–µ–∫—Å –º–∞—Ä–∫–µ—Ç'
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ
        ozon_matches = sum(1 for keyword in ozon_keywords if keyword in text_lower)
        wb_matches = sum(1 for keyword in wb_keywords if keyword in text_lower)
        yandex_matches = sum(1 for keyword in yandex_keywords if keyword in text_lower)
        
        if ozon_matches > wb_matches and ozon_matches > yandex_matches:
            return 'OZON'
        elif wb_matches > ozon_matches and wb_matches > yandex_matches:
            return 'WB'
        elif yandex_matches > ozon_matches and yandex_matches > wb_matches:
            return 'YANDEX'
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω—ã—Ö —É–∫–∞–∑–∞–Ω–∏–π, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if any(word in text_lower for word in ['–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', 'marketplace', '–ø—Ä–æ–¥–∞–≤–µ—Ü', 'seller']):
            if any(word in text_lower for word in ['–æ–∑–æ–Ω', 'ozon']):
                return 'OZON'
            elif any(word in text_lower for word in ['–≤–±', 'wb', 'wildberr']):
                return 'WB'
            elif any(word in text_lower for word in ['—è–Ω–¥–µ–∫—Å', 'yandex']):
                return 'YANDEX'
        
        return 'OTHER'

    def structure_content(self, source_texts, discussion_texts):
        """–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""
        try:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            all_content = source_texts + discussion_texts
            
            if not all_content:
                print("‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, –∏—Å–ø–æ–ª—å–∑—É—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                return self._create_fallback_structure([])

            print(f"üìù –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é {len(all_content)} —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º
            marketplace_stats = {'OZON': 0, 'WB': 0, 'YANDEX': 0, 'OTHER': 0}
            
            # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã
            ozon_themes = []
            wb_themes = []
            yandex_themes = []
            
            for text in all_content:
                marketplace = self.analyze_marketplace(text)
                marketplace_stats[marketplace] += 1
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
                themes = self._extract_specific_themes(text, marketplace)
                if marketplace == 'OZON':
                    ozon_themes.extend(themes)
                elif marketplace == 'WB':
                    wb_themes.extend(themes)
                elif marketplace == 'YANDEX':
                    yandex_themes.extend(themes)
            
            # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—ã–µ —á–∞—Å—Ç—ã–µ —Ç–µ–º—ã
            ozon_top = self._get_top_themes(ozon_themes)
            wb_top = self._get_top_themes(wb_themes)
            yandex_top = self._get_top_themes(yandex_themes)
            
            # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–º, —Å–æ–∑–¥–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            if not ozon_top and marketplace_stats['OZON'] > 0:
                ozon_top = self._generate_fallback_themes('OZON', marketplace_stats['OZON'])
            if not wb_top and marketplace_stats['WB'] > 0:
                wb_top = self._generate_fallback_themes('WB', marketplace_stats['WB'])
            if not yandex_top and marketplace_stats['YANDEX'] > 0:
                yandex_top = self._generate_fallback_themes('YANDEX', marketplace_stats['YANDEX'])
            
            return {
                'title': 'üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ–±–∑–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
                'summary': f'–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ {len(all_content)} —Å–æ–æ–±—â–µ–Ω–∏–π. OZON: {marketplace_stats["OZON"]}, WB: {marketplace_stats["WB"]}, –Ø–Ω–¥–µ–∫—Å: {marketplace_stats["YANDEX"]}',
                'sections': {
                    'OZON': {
                        'key_points': ozon_top or ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã OZON'],
                        'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ'],
                        'tips': ['–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø–ª–æ—â–∞–¥–∫–∏']
                    },
                    'WB': {
                        'key_points': wb_top or ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è Wildberries'],
                        'important': ['–í–Ω–∏–º–∞–Ω–∏–µ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤'],
                        'tips': ['–ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ—Å—å –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –ª–æ–≥–∏—Å—Ç–∏–∫–∏']
                    },
                    'YANDEX': {
                        'key_points': yandex_top or ['–†–∞–∑–≤–∏—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞'],
                        'important': ['–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–æ—â–∞–¥–∫–∏'],
                        'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è']
                    }
                },
                'recommendations': '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
            }
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            return self._create_fallback_structure(source_texts + discussion_texts)

    def _extract_specific_themes(self, text, marketplace):
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        themes = []
        text_lower = text.lower()
        
        # –ö–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
        key_phrases = {
            'OZON': [
                '–¥–æ—Å—Ç–∞–≤–∫', '–ª–æ–≥–∏—Å—Ç–∏–∫', '—Ç–∞—Ä–∏—Ñ', '—Ä–µ–∫–ª–∞–º', '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω', 
                '–≤–æ–∑–≤—Ä–∞—Ç', '–≤—ã–∫—É–ø', '–±—Ä–∞–∫', '–∫–∞—Ä—Ç–æ—á–∫', '–æ—Ç–∑—ã–≤', '—Ä–µ–π—Ç–∏–Ω–≥',
                '–∞–∫—Ü–∏', '—Ä–∞—Å–ø—Ä–æ–¥–∞–∂', '—Å–∫–ª–∞–¥', '–∞–Ω–∞–ª–∏—Ç–∏–∫', '–º–æ–¥–µ—Ä–∞—Ü',
                '–∫–∞—Ç–∞–ª–æ–≥', '–ø–æ–∏—Å–∫', '—Å–∫–∏–¥–∫', '–±–æ–Ω—É—Å', '—Ç—Ä–µ–≤–µ–ª', 'travel',
                '–∫–∞—Ä—Ç', 'card', '—Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç', 'fulfillment', '–∫–æ–º–∏—Å—Å'
            ],
            'WB': [
                '–¥–æ—Å—Ç–∞–≤–∫', '–ª–æ–≥–∏—Å—Ç–∏–∫', '—Ç–∞—Ä–∏—Ñ', '—Ä–µ–∫–ª–∞–º', '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω',
                '–≤–æ–∑–≤—Ä–∞—Ç', '–≤—ã–∫—É–ø', '–±—Ä–∞–∫', '–∫–∞—Ä—Ç–æ—á–∫', '–æ—Ç–∑—ã–≤', '—Ä–µ–π—Ç–∏–Ω–≥', 
                '–∞–∫—Ü–∏', '—Ä–∞—Å–ø—Ä–æ–¥–∞–∂', '—Å–∫–ª–∞–¥', '–∞–Ω–∞–ª–∏—Ç–∏–∫', '–º–æ–¥–µ—Ä–∞—Ü',
                '–∫–∞—Ç–∞–ª–æ–≥', '–ø–æ–∏—Å–∫', '—Å–∫–∏–¥–∫', '–±–æ–Ω—É—Å', '–∫–µ—à–±–µ–∫', 'cashback',
                '—Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç', 'fulfillment', '–∫–æ–º–∏—Å—Å', '–≤—ã–¥–∞—á', '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü'
            ],
            'YANDEX': [
                '–¥–æ—Å—Ç–∞–≤–∫', '–ª–æ–≥–∏—Å—Ç–∏–∫', '—Ç–∞—Ä–∏—Ñ', '—Ä–µ–∫–ª–∞–º', '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω',
                '–≤–æ–∑–≤—Ä–∞—Ç', '–≤—ã–∫—É–ø', '–±—Ä–∞–∫', '–∫–∞—Ä—Ç–æ—á–∫', '–æ—Ç–∑—ã–≤', '—Ä–µ–π—Ç–∏–Ω–≥',
                '–∞–∫—Ü–∏', '—Ä–∞—Å–ø—Ä–æ–¥–∞–∂', '—Å–∫–ª–∞–¥', '–∞–Ω–∞–ª–∏—Ç–∏–∫', '–º–æ–¥–µ—Ä–∞—Ü', 
                '–∫–∞—Ç–∞–ª–æ–≥', '–ø–æ–∏—Å–∫', '—Å–∫–∏–¥–∫', '–±–æ–Ω—É—Å', '–ø–ª—é—Å', 'plus',
                '–¥–æ—Å—Ç–∞–≤–∫', '—Å–∞–º–æ–≤—ã–≤–æ–∑', '–ø–æ–∏—Å–∫', '–≤—ã–¥–∞—á', '–∫–æ–º–∏—Å—Å'
            ]
        }
        
        theme_map = {
            '–¥–æ—Å—Ç–∞–≤–∫': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏',
            '–ª–æ–≥–∏—Å—Ç–∏–∫': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ª–æ–≥–∏—Å—Ç–∏–∫–µ', 
            '—Ç–∞—Ä–∏—Ñ': '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤',
            '—Ä–µ–∫–ª–∞–º': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤',
            '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏',
            '–≤–æ–∑–≤—Ä–∞—Ç': '–ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤',
            '–≤—ã–∫—É–ø': '–ü—Ä–æ—Ü–µ—Å—Å—ã –≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤',
            '–±—Ä–∞–∫': '–†–∞–±–æ—Ç–∞ —Å –±—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º',
            '–∫–∞—Ä—Ç–æ—á–∫': '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º —Ç–æ–≤–∞—Ä–æ–≤',
            '–æ—Ç–∑—ã–≤': '–°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤',
            '—Ä–µ–π—Ç–∏–Ω–≥': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö',
            '–∞–∫—Ü–∏': '–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏',
            '—Ä–∞—Å–ø—Ä–æ–¥–∞–∂': '–ü–µ—Ä–∏–æ–¥—ã —Ä–∞—Å–ø—Ä–æ–¥–∞–∂',
            '—Å–∫–ª–∞–¥': '–°–∫–ª–∞–¥—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã',
            '–∞–Ω–∞–ª–∏—Ç–∏–∫': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
            '–º–æ–¥–µ—Ä–∞—Ü': '–ü—Ä–æ—Ü–µ—Å—Å—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
            '–∫–∞—Ç–∞–ª–æ–≥': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞',
            '–ø–æ–∏—Å–∫': '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –ø–æ–∏—Å–∫–∞',
            '—Å–∫–∏–¥–∫': '–°–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫',
            '–±–æ–Ω—É—Å': '–ë–æ–Ω—É—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
            '—Ç—Ä–µ–≤–µ–ª': 'OZON Travel',
            '–∫–∞—Ä—Ç': 'OZON –ö–∞—Ä—Ç–∞',
            '–∫–µ—à–±–µ–∫': '–ö–µ—à–±—ç–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
            '—Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç': 'Fulfillment —É—Å–ª—É–≥–∏',
            '–ø–ª—é—Å': '–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å',
            '–∫–æ–º–∏—Å—Å': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π',
            '–≤—ã–¥–∞—á': '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –≤—ã–¥–∞—á–∏ —Ç–æ–≤–∞—Ä–æ–≤',
            '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü': '–°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'
        }
        
        phrases = key_phrases.get(marketplace, [])
        for phrase in phrases:
            if phrase in text_lower:
                theme = theme_map.get(phrase, phrase)
                if theme not in themes:
                    themes.append(theme)
        
        return themes[:5]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º

    def _get_top_themes(self, themes, top_n=3):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º—ã–µ —á–∞—Å—Ç—ã–µ —Ç–µ–º—ã"""
        from collections import Counter
        if not themes:
            return []
        
        counter = Counter(themes)
        return [theme for theme, count in counter.most_common(top_n)]

    def _generate_fallback_themes(self, marketplace, count):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        base_themes = {
            'OZON': [
                '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã OZON',
                '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è',
                '–ù–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
            ],
            'WB': [
                '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è Wildberries', 
                '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
                '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏'
            ],
            'YANDEX': [
                '–†–∞–∑–≤–∏—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞',
                '–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤',
                '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
            ]
        }
        
        themes = base_themes.get(marketplace, ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'])
        if count > 5:
            themes.append(f'–ê–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π: {count}')
        
        return themes

    def _create_fallback_structure(self, texts):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É"""
        marketplace_stats = {'OZON': 0, 'WB': 0, 'YANDEX': 0, 'OTHER': 0}
        for text in texts:
            marketplace = self.analyze_marketplace(text)
            marketplace_stats[marketplace] += 1
            
        return {
            'title': 'üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ–±–∑–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
            'summary': f'–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ {len(texts)} —Å–æ–æ–±—â–µ–Ω–∏–π. OZON: {marketplace_stats["OZON"]}, WB: {marketplace_stats["WB"]}, –Ø–Ω–¥–µ–∫—Å: {marketplace_stats["YANDEX"]}' if texts else '–ê–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Ç—Ä–µ–Ω–¥–æ–≤',
            'sections': {
                'OZON': {
                    'key_points': ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã OZON', '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'],
                    'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ'],
                    'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏']
                },
                'WB': {
                    'key_points': ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è Wildberries', '–ü—Ä–æ—Ü–µ—Å—Å—ã –≤—ã–∫—É–ø–∞', '–†–∞–±–æ—Ç–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏'],
                    'important': ['–í–Ω–∏–º–∞–Ω–∏–µ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤'],
                    'tips': ['–†–µ–≥—É–ª—è—Ä–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂']
                }
            },
            'recommendations': '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤'
        }
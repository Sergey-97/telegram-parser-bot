import os
import json
import requests
import re
from config import HUGGINGFACE_TOKEN

class AIProcessor:
    def __init__(self):
        self.api_key = HUGGINGFACE_TOKEN
        
    def analyze_marketplace(self, text, channel_url=""):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""
        if not text:
            return 'OTHER'
            
        text_lower = text.lower()
        channel_lower = channel_url.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ URL –∫–∞–Ω–∞–ª–∞
        if 'ozon' in channel_lower:
            return 'OZON'
        elif 'wb' in channel_lower or 'wildberr' in channel_lower:
            return 'WB'
        elif 'yandex' in channel_lower or 'market' in channel_lower:
            return 'YANDEX'
            
        # –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –ø–æ —Ç–µ–∫—Å—Ç—É
        ozon_patterns = [
            r'\bozon\b', r'\b–æ–∑–æ–Ω\b', r'\bozon\s*marketplace', r'\b–æ–∑–æ–Ω\s*–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å',
            r'\bozon\s*seller', r'\b–æ–∑–æ–Ω\s*–ø—Ä–æ–¥–∞–≤–µ—Ü', r'\bozon\s*adv', r'\b–æ–∑–æ–Ω\s*—Ä–µ–∫–ª–∞–º–∞',
            r'\bozon\s*travel', r'\b–æ–∑–æ–Ω\s*–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', r'\bozon\s*card', r'\b–æ–∑–æ–Ω\s*–∫–∞—Ä—Ç–∞',
            r'\b–æzon\b', r'\bOZON\b', r'\bOzon\b'
        ]
        
        wb_patterns = [
            r'\bwb\b', r'\b–≤–±\b', r'\bwildberries\b', r'\b–≤–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑\b', r'\b–≤–∞–ª–¥–±–µ—Ä—Ä–∏–∑\b',
            r'\bwildberry\b', r'\b–≤–±\s*seller', r'\b–≤–±\s*–ø—Ä–æ–¥–∞–≤–µ—Ü', r'\bwb\s*seller',
            r'\bwildberries\s*official', r'\b–≤–±\s*–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π', r'\b–ø–æ–¥–±–æ—Ä–∫–∏\s*wb',
            r'\bwildberries\s*marketplace', r'\b–≤–±\s*–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', r'\bWB\b', r'\bWb\b'
        ]
        
        yandex_patterns = [
            r'\byandex\b', r'\b—è–Ω–¥–µ–∫—Å\b', r'\b—è–Ω–¥–µ–∫—Å\s*market', r'\b—è–Ω–¥–µ–∫—Å\s*–º–∞—Ä–∫–µ—Ç',
            r'\byandex\s*market', r'\b—è–Ω–¥–µ–∫—Å\s*–¥–æ—Å—Ç–∞–≤–∫–∞', r'\byandex\s*delivery',
            r'\bmarket\s*place', r'\b–º–∞—Ä–∫–µ—Ç\s*–ø–ª–µ–π—Å', r'\bYandex\b', r'\bYANDEX\b'
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º OZON
        ozon_score = sum(1 for pattern in ozon_patterns if re.search(pattern, text_lower, re.IGNORECASE))
        if ozon_score > 0:
            return 'OZON'
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Wildberries
        wb_score = sum(1 for pattern in wb_patterns if re.search(pattern, text_lower, re.IGNORECASE))
        if wb_score > 0:
            return 'WB'
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Yandex Market
        yandex_score = sum(1 for pattern in yandex_patterns if re.search(pattern, text_lower, re.IGNORECASE))
        if yandex_score > 0:
            return 'YANDEX'
        
        return 'OTHER'

    def structure_content(self, source_texts, discussion_texts):
        """–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
        try:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            all_content = source_texts + discussion_texts
            
            if not all_content:
                return self._create_fallback_structure([])

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º
            marketplace_stats = {'OZON': 0, 'WB': 0, 'YANDEX': 0, 'OTHER': 0}
            
            # –°–æ–±–∏—Ä–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
            ozon_themes = set()
            wb_themes = set()
            yandex_themes = set()
            
            for text in all_content:
                marketplace = self.analyze_marketplace(text)
                marketplace_stats[marketplace] += 1
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏–π
                themes = self._extract_themes(text, marketplace)
                if marketplace == 'OZON':
                    ozon_themes.update(themes)
                elif marketplace == 'WB':
                    wb_themes.update(themes)
                elif marketplace == 'YANDEX':
                    yandex_themes.update(themes)

            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º, —Å–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç–µ–º—ã
            if not ozon_themes and marketplace_stats['OZON'] > 0:
                ozon_themes = {
                    '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã OZON',
                    '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è', 
                    '–ù–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤'
                }
                
            if not wb_themes and marketplace_stats['WB'] > 0:
                wb_themes = {
                    '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è Wildberries',
                    '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏',
                    '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤'
                }

            return {
                'title': 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
                'summary': f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(all_content)} —Å–æ–æ–±—â–µ–Ω–∏–π. OZON: {marketplace_stats["OZON"]}, WB: {marketplace_stats["WB"]}, Yandex: {marketplace_stats["YANDEX"]}',
                'sections': {
                    'OZON': {
                        'key_points': list(ozon_themes)[:3] if ozon_themes else ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã OZON', '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è'],
                        'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ'],
                        'tips': ['–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø–ª–æ—â–∞–¥–∫–∏']
                    },
                    'WB': {
                        'key_points': list(wb_themes)[:3] if wb_themes else ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è Wildberries', '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏'],
                        'important': ['–í–Ω–∏–º–∞–Ω–∏–µ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤'],
                        'tips': ['–ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ—Å—å –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –ª–æ–≥–∏—Å—Ç–∏–∫–∏']
                    },
                    'YANDEX': {
                        'key_points': list(yandex_themes)[:3] if yandex_themes else ['–†–∞–∑–≤–∏—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞', '–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤'],
                        'important': ['–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–æ—â–∞–¥–∫–∏'],
                        'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è']
                    }
                },
                'recommendations': '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
            }
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            return self._create_fallback_structure(source_texts + discussion_texts)

    def _extract_themes(self, text, marketplace):
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        themes = set()
        text_lower = text.lower()
        
        # –û–±—â–∏–µ —Ç–µ–º—ã –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
        common_themes = {
            '–¥–æ—Å—Ç–∞–≤–∫': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏',
            '–ª–æ–≥–∏—Å—Ç–∏–∫': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ª–æ–≥–∏—Å—Ç–∏–∫–µ',
            '—Ç–∞—Ä–∏—Ñ': '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤',
            '—Ä–µ–∫–ª–∞–º': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤',
            '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏',
            '–≤–æ–∑–≤—Ä–∞—Ç': '–ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤',
            '–≤—ã–∫—É–ø': '–ü—Ä–æ—Ü–µ—Å—Å—ã –≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤',
            '–±—Ä–∞–∫': '–†–∞–±–æ—Ç–∞ —Å –±—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º',
            '–∫–∞—Ä—Ç–æ—á–∫': '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º —Ç–æ–≤–∞—Ä–æ–≤',
            '–æ—Ç–∑—ã–≤': '–°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤',
            '—Ä–µ–π—Ç–∏–Ω–≥': '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö',
            '–∞–∫—Ü–∏': '–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏',
            '—Ä–∞—Å–ø—Ä–æ–¥–∞–∂': '–ü–µ—Ä–∏–æ–¥—ã —Ä–∞—Å–ø—Ä–æ–¥–∞–∂',
            '—Å–∫–ª–∞–¥': '–°–∫–ª–∞–¥—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã',
            '–∞–Ω–∞–ª–∏—Ç–∏–∫': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
            '–º–æ–¥–µ—Ä–∞—Ü': '–ü—Ä–æ—Ü–µ—Å—Å—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
            '–∫–∞—Ç–∞–ª–æ–≥': '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞',
            '–ø–æ–∏—Å–∫': '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –ø–æ–∏—Å–∫–∞',
            '—Å–∫–∏–¥–∫': '–°–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫',
            '–±–æ–Ω—É—Å': '–ë–æ–Ω—É—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã'
        }
        
        for keyword, theme in common_themes.items():
            if keyword in text_lower:
                themes.add(theme)
        
        return themes

    def _create_fallback_structure(self, texts):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏"""
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        marketplace_stats = {'OZON': 0, 'WB': 0, 'YANDEX': 0, 'OTHER': 0}
        for text in texts:
            marketplace = self.analyze_marketplace(text)
            marketplace_stats[marketplace] += 1
            
        return {
            'title': 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
            'summary': f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(texts)} —Å–æ–æ–±—â–µ–Ω–∏–π. OZON: {marketplace_stats["OZON"]}, WB: {marketplace_stats["WB"]}, Yandex: {marketplace_stats["YANDEX"]}' if texts else '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
            'sections': {
                'OZON': {
                    'key_points': ['–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤'],
                    'important': ['–°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ'],
                    'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏']
                },
                'WB': {
                    'key_points': ['–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ —Å –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏', '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –≤—ã–¥–∞—á–∏'],
                    'important': ['–í–Ω–∏–º–∞–Ω–∏–µ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤'],
                    'tips': ['–†–µ–≥—É–ª—è—Ä–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂']
                },
                'YANDEX': {
                    'key_points': ['–†–∞–∑–≤–∏—Ç–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç', '–ù–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤'],
                    'important': ['–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–æ—â–∞–¥–∫–∏'],
                    'tips': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è']
                }
            },
            'recommendations': '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö.'
        }
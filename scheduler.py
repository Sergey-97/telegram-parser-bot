import os
import asyncio
import logging
from flask import Flask

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (–æ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
import scheduler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    from database import init_db
    init_db()
    logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")

@app.route('/')
def home():
    return """
    <h1>ü§ñ Telegram Parser Bot</h1>
    <p>–ë–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤</p>
    <p><strong>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</strong> –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00 UTC</p>
    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</p>
    <p>
        <a href="/health">Health Check</a> | 
        <a href="/run-now">Run Now</a>
    </p>
    """

@app.route('/health')
def health():
    return "OK"

@app.route('/run-now')
def run_now():
    """–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º event loop
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        
        from bot_runner import run_bot
        loop.run_until_complete(run_bot())
        loop.close()
        
        return "‚úÖ Bot executed successfully! Check Render logs for details."
    except Exception as e:
        return f"‚ùå Error: {str(e)}"

if __name__ == '__main__':
    port = int(os.getenv('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
# bot_ptb_fixed.py
import logging
import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from dotenv import load_dotenv
from ai_processor_final import AIProcessorFinal
from post_formatter import PostFormatter

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
ai_processor = AIProcessorFinal()
post_formatter = PostFormatter()

class TelegramBot:
    def __init__(self):
        self.token = os.getenv('BOT_TOKEN')
        self.target_channel = os.getenv('TARGET_CHANNEL', '@mar_factor')
        self.source_channels = [ch.strip() for ch in os.getenv('SOURCE_CHANNELS', '').split(',') if ch.strip()]
        
        if not self.token:
            raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        
        # –°–æ–∑–¥–∞–µ–º updater (—Å—Ç–∞—Ä—ã–π —Å—Ç–∏–ª—å –¥–ª—è –≤–µ—Ä—Å–∏–∏ 13.15)
        self.updater = Updater(token=self.token, use_context=True)
        self.dispatcher = self.updater.dispatcher
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.dispatcher.add_handler(CommandHandler("start", self.start_command))
        self.dispatcher.add_handler(CommandHandler("parse", self.parse_command))
        self.dispatcher.add_handler(CommandHandler("status", self.status_command))
    
    def start_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        update.message.reply_text(
            "ü§ñ –ë–æ—Ç-–ø–∞—Ä—Å–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω!\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/parse - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—é\n"
            "/status - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
        )
    
    def parse_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /parse"""
        update.message.reply_text("üîÑ –ó–∞–ø—É—Å–∫–∞—é AI-–ø–∞—Ä—Å–∏–Ω–≥...")
        
        try:
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–±–æ—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–æ–≤
            # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            main_posts = [
                "Ozon –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤. –¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ —Å–º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∑–∞ –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã.",
                "–°–∫–∏–¥–∫–∏ –¥–æ 50% –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ! –£—Å–ø–µ–π—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã, –Ω–æ—É—Ç–±—É–∫–∏ –∏ –ø–ª–∞–Ω—à–µ—Ç—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º. –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞."
            ]
            
            discussion_posts = [
                "–û—Ç–ª–∏—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ Ozon! –Ø –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –Ω–æ–≤—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏.",
                "–°–∫–∏–¥–∫–∏ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä! –£–∂–µ –ø—Ä–∏—Å–º–æ—Ç—Ä–µ–ª —Å–µ–±–µ –Ω–æ–≤—ã–π –Ω–æ—É—Ç–±—É–∫ –ø–æ –æ—Ç–ª–∏—á–Ω–æ–π —Ü–µ–Ω–µ.",
                "–ë—ã–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π, –Ω–æ –≤ —Ü–µ–ª–æ–º —Å–µ—Ä–≤–∏—Å —É–ª—É—á—à–∞–µ—Ç—Å—è."
            ]
            
            # AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞
            structured_content = ai_processor.structure_content(main_posts, discussion_posts)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
            final_post = post_formatter.format_structured_post(
                structured_content, 
                self.source_channels
            )
            
            # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª
            context.bot.send_message(
                chat_id=self.target_channel,
                text=final_post,
                parse_mode='Markdown'
            )
            
            update.message.reply_text("‚úÖ AI-–ø–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª!")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def status_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
        status_text = (
            "ü§ñ **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:** –ê–∫—Ç–∏–≤–µ–Ω\n"
            f"üéØ **–¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª:** {self.target_channel}\n"
            f"üì° **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** {len(self.source_channels)}\n"
            f"üß† **AI-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä:** –ì–æ—Ç–æ–≤\n"
            "‚è∞ **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /parse –¥–ª—è –∑–∞–ø—É—Å–∫–∞**"
        )
        update.message.reply_text(status_text, parse_mode='Markdown')
    
    def publish_to_channel(self, text: str):
        """–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª"""
        try:
            self.updater.bot.send_message(
                chat_id=self.target_channel,
                text=text,
                parse_mode='Markdown'
            )
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ {self.target_channel}")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
            return False
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        
        try:
            # –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
            self.updater.bot.send_message(
                chat_id=self.target_channel,
                text="üöÄ AI-–ø–∞—Ä—Å–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!",
                parse_mode='Markdown'
            )
            logger.info("‚úÖ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            logger.error(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        self.updater.start_polling()
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã...")
        self.updater.idle()

if __name__ == "__main__":
    try:
        bot = TelegramBot()
        bot.run()
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
from sqlalchemy import create_engine, Column, Integer, String, DateTime, Text, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from datetime import datetime
import os
import re

Base = declarative_base()

class Post(Base):
    __tablename__ = 'posts'
    
    id = Column(Integer, primary_key=True)
    channel = Column(String(255))
    message_id = Column(Integer)
    text = Column(Text)
    date = Column(DateTime)
    processed = Column(Boolean, default=False)
    processed_text = Column(Text)
    created_at = Column(DateTime, default=datetime.now)

class BotConfig(Base):
    __tablename__ = 'config'
    
    id = Column(Integer, primary_key=True)
    key = Column(String(255))
    value = Column(String(255))

def get_database_url():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    database_url = os.environ.get('DATABASE_URL', 'sqlite:///bot_database.db')
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–ª—è Render PostgreSQL
    if database_url.startswith('postgres://'):
        database_url = database_url.replace('postgres://', 'postgresql://', 1)
    
    return database_url

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    database_url = get_database_url()
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {database_url.split('://')[0]}")
    
    try:
        engine = create_engine(database_url)
        Base.metadata.create_all(engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
        return sessionmaker(bind=engine)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î: {e}")
        print("üîÑ –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQLite...")
        # Fallback –Ω–∞ SQLite
        engine = create_engine('sqlite:///bot_database.db')
        Base.metadata.create_all(engine)
        return sessionmaker(bind=engine)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Session = init_db()
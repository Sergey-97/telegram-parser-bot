import asyncio
import logging
from pyrogram import Client
from config import API_ID, API_HASH, BOT_TOKEN, TARGET_CHANNEL

logger = logging.getLogger(__name__)

class TelegramManager:
    def __init__(self):
        self.user_client = None
        self.bot_client = None
    
    async def get_user_client(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞"""
        if self.user_client is None:
            self.user_client = Client(
                "telegram_parser",
                api_id=API_ID,
                api_hash=API_HASH,
                workdir="/opt/render/project/src"
            )
            await self.user_client.start()
            
            me = await self.user_client.get_me()
            logger.info(f"üîê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {me.first_name} - –ë–æ—Ç: {me.is_bot}")
            
        return self.user_client
    
    async def get_bot_client(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
        if self.bot_client is None and BOT_TOKEN:
            self.bot_client = Client(
                "telegram_bot",
                api_id=API_ID,
                api_hash=API_HASH,
                bot_token=BOT_TOKEN,
                workdir="/opt/render/project/src"
            )
            await self.bot_client.start()
            
            me = await self.bot_client.get_me()
            logger.info(f"ü§ñ –ë–û–¢: {me.username} - –ë–æ—Ç: {me.is_bot}")
            
        return self.bot_client
    
    async def send_message(self, text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞"""
        try:
            bot = await self.get_bot_client()
            if bot:
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
                max_length = 4096
                if len(text) > max_length:
                    text = text[:max_length-100] + "\n\n... (–ø–æ—Å—Ç —Å–æ–∫—Ä–∞—â–µ–Ω)"
                
                await bot.send_message(TARGET_CHANNEL, text)
                logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {TARGET_CHANNEL}")
                return True
            else:
                logger.warning("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
                return False
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
        if self.user_client:
            await self.user_client.stop()
        if self.bot_client:
            await self.bot_client.stop()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
telegram_manager = TelegramManager()
import asyncio
from pyrogram import Client
from config import API_ID, API_HASH

async def create_test_channel():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    client = Client("telegram_parser", api_id=API_ID, api_hash=API_HASH)
    
    await client.start()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª
        channel = await client.create_channel(
            title="üìä –¢–µ—Å—Ç –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤",
            description="–ö–∞–Ω–∞–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"
        )
        
        # –î–µ–ª–∞–µ–º –∫–∞–Ω–∞–ª –ø—É–±–ª–∏—á–Ω—ã–º
        await client.set_chat_username(channel.id, f"test_marketplace_analytics_{channel.id}")
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª: https://t.me/test_marketplace_analytics_{channel.id}")
        print(f"üìù ID –∫–∞–Ω–∞–ª–∞: {channel.id}")
        
        return channel.id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
        # –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        me = await client.get_me()
        print(f"üì® –ë—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'")
        return "me"
    
    finally:
        await client.stop()

async def check_channel_access(client, channel):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É"""
    try:
        if channel == "me":
            return True
            
        chat = await client.get_chat(channel)
        permissions = await client.get_chat_member(chat.id, "me")
        
        if permissions.can_send_messages:
            print(f"‚úÖ –ï—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ {chat.title}")
            return True
        else:
            print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ {chat.title}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É {channel}: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(create_test_channel())
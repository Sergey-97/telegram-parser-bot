#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –Ω–∞ Render
"""
import os
import asyncio
from pyrogram import Client
from config import API_ID, API_HASH

async def setup_telegram():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram —Å–µ—Å—Å–∏–∏"""
    print("üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –∫–ª–∏–µ–Ω—Ç–∞...")
    
    client = Client(
        "telegram_parser",
        api_id=API_ID,
        api_hash=API_HASH,
        workdir="./"
    )
    
    try:
        await client.start()
        print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        me = await client.get_me()
        print(f"‚úÖ –í–æ—à–ª–∏ –∫–∞–∫: {me.first_name} (@{me.username})")
        
        await client.stop()
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        raise

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    required_vars = ['API_ID', 'API_HASH']
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {missing_vars}")
        print("–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Environment Variables –≤ Render")
        exit(1)
    
    asyncio.run(setup_telegram())
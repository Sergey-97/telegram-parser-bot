import os
import asyncio
import logging
from flask import Flask
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
from pyrogram import Client
from database import init_db
from bot_runner import run_bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
init_db()

def scheduled_post():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ - –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    try:
        logger.info("üïê –ó–∞–ø—É—Å–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...")
        asyncio.run(run_bot())
        logger.info("‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")

@app.route('/')
def home():
    return "ü§ñ Telegram Parser Bot is running! Posts scheduled for Mondays 10:00 UTC"

@app.route('/health')
def health():
    return "OK"

@app.route('/run-now')
def run_now():
    """–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        asyncio.run(run_bot())
        return "‚úÖ Bot executed successfully!"
    except Exception as e:
        return f"‚ùå Error: {e}"

def start_scheduler():
    """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    scheduler = BackgroundScheduler()
    
    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00 UTC
    trigger = CronTrigger(
        day_of_week='mon',  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        hour=10,            # 10:00
        minute=0,           # 00 –º–∏–Ω—É—Ç
        timezone='UTC'
    )
    
    scheduler.add_job(
        func=scheduled_post,
        trigger=trigger,
        id='weekly_post',
        name='Weekly marketplace analysis post',
        replace_existing=True
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 11:00 –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if os.getenv('DEBUG_SCHEDULE', 'False').lower() == 'true':
        scheduler.add_job(
            func=scheduled_post,
            trigger=CronTrigger(hour=11, minute=0, timezone='UTC'),
            id='daily_test',
            name='Daily test post'
        )
    
    scheduler.start()
    logger.info("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω: –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 10:00 UTC")

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    start_scheduler()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    port = int(os.getenv('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
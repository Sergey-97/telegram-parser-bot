import os
import asyncio
import logging
from pyrogram import Client
from config import API_ID, API_HASH

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def check_session():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–∞—è —Å–µ—Å—Å–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏ –Ω–∞ Render...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    files = os.listdir('.')
    session_files = [f for f in files if f.endswith('.session')]
    print(f"üìÅ –§–∞–π–ª—ã —Å–µ—Å—Å–∏–∏: {session_files}")
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–µ–π
    if 'telegram_parser.session' in session_files:
        print("üîê –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å telegram_parser.session...")
        try:
            client = Client("telegram_parser", API_ID, API_HASH)
            await client.start()
            me = await client.get_me()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è: {me.first_name} (@{me.username}) - {me.is_bot}")
            await client.stop()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏: {e}")
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ –±–æ—Ç
    print("ü§ñ –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ –±–æ—Ç...")
    try:
        from config import BOT_TOKEN
        if BOT_TOKEN:
            client = Client("bot_test", API_ID, API_HASH, bot_token=BOT_TOKEN)
            await client.start()
            me = await client.get_me()
            print(f"‚úÖ –ë–æ—Ç —Å–µ—Å—Å–∏—è: {me.first_name} (@{me.username}) - {me.is_bot}")
            await client.stop()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç —Å–µ—Å—Å–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(check_session())